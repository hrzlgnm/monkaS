name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ github.ref != 'refs/heads/main' }}

jobs:
  Lint:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/hrzlgnm/monkas-github-gcc:v1@sha256:ef6da99b029e4ecd0c26c4a0f66b981def2511d1910374ba73c8e3d2b42be86e
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

      - name: Check clang-format
        run: |
          find . -regex '.*\.\(cpp\|hpp\)' -exec clang-format --dry-run --Werror {} +

      - name: Check spelling using typos-action
        if: always()
        uses: crate-ci/typos@b1ae8d918b6e85bd611117d3d9a3be4f903ee5e4 # v1.33.1

  Build-And-Test:
    name: ${{ matrix.toolchain.name }}
    strategy:
      fail-fast: false
      matrix:
        toolchain:
          - {
              runs_on: ubuntu-latest,
              name: Clang libstdc++,
              image: ghcr.io/hrzlgnm/monkas-github-gcc:v1@sha256:109100b767c213e38f1f0e10d8bb39dcb27b01687688f8f390dc36d6e416acaf,
              CC: clang,
              CXX: clang++,
              CFLAGS: -stdlib=libstdc++,
              CMAKE_BUILD_TYPE: Debug,
              CMAKE_FLAGS: -G Ninja,
              sccache: sccache,
            }
          - {
              runs_on: ubuntu-latest,
              name: Clang ASAN+UBSAN libstdc++,
              image: ghcr.io/hrzlgnm/monkas-github-gcc:v1@sha256:109100b767c213e38f1f0e10d8bb39dcb27b01687688f8f390dc36d6e416acaf,
              CC: clang,
              CXX: clang++,
              CFLAGS: "-fsanitize=address,undefined -fsanitize-address-use-after-scope -fno-sanitize-recover=address,undefined -stdlib=libstdc++",
              CMAKE_BUILD_TYPE: Debug,
              ASAN_OPTIONS: strict_string_checks=1:detect_stack_use_after_return=1:check_initialization_order=1:strict_init_order=1,
              CMAKE_FLAGS: -G Ninja,
              sccache: sccache,
            }
          - {
              runs_on: ubuntu-latest,
              name: Clang libstdc++ Release,
              image: ghcr.io/hrzlgnm/monkas-github-gcc:v1@sha256:109100b767c213e38f1f0e10d8bb39dcb27b01687688f8f390dc36d6e416acaf,
              CC: clang,
              CXX: clang++,
              CFLAGS: -stdlib=libstdc++,
              CMAKE_BUILD_TYPE: Release,
              CMAKE_FLAGS: -G Ninja,
              sccache: sccache,
            }
          - {
              runs_on: ubuntu-latest,
              name: GCC,
              image: ghcr.io/hrzlgnm/monkas-github-gcc:v1@sha256:109100b767c213e38f1f0e10d8bb39dcb27b01687688f8f390dc36d6e416acaf,
              CC: gcc,
              CXX: g++,
              CFLAGS: "",
              CMAKE_BUILD_TYPE: Debug,
              CMAKE_FLAGS: -G Ninja,
              sccache: sccache,
            }
          - {
              runs_on: ubuntu-latest,
              name: GCC ASAN+UBSAN,
              image: ghcr.io/hrzlgnm/monkas-github-gcc:v1@sha256:109100b767c213e38f1f0e10d8bb39dcb27b01687688f8f390dc36d6e416acaf,
              CC: gcc,
              CXX: g++,
              CFLAGS: "-fsanitize=address,undefined -fsanitize-address-use-after-scope -fno-sanitize-recover=address,undefined",
              CMAKE_BUILD_TYPE: Debug,
              CMAKE_FLAGS: -G Ninja,
              ASAN_OPTIONS: strict_string_checks=1:detect_stack_use_after_return=1:check_initialization_order=1:strict_init_order=1,
              sccache: sccache,
            }
          - {
              runs_on: ubuntu-latest,
              name: GCC Release,
              image: ghcr.io/hrzlgnm/monkas-github-gcc:v1@sha256:109100b767c213e38f1f0e10d8bb39dcb27b01687688f8f390dc36d6e416acaf,
              CC: gcc,
              CXX: g++,
              CFLAGS: "",
              CMAKE_BUILD_TYPE: Release,
              CMAKE_FLAGS: -G Ninja,
              sccache: sccache,
            }
    runs-on: ${{ matrix.toolchain.runs_on }}
    container: ${{ matrix.toolchain.image }}
    env:
      ASAN_OPTIONS: ${{ matrix.toolchain.ASAN_OPTIONS }}
      CMAKE_BUILD_TYPE: ${{ matrix.toolchain.CMAKE_BUILD_TYPE }}
      CMAKE_C_COMPILER: ${{ matrix.toolchain.CC }}
      CMAKE_C_FLAGS: ${{ matrix.toolchain.CFLAGS }}
      CMAKE_CXX_COMPILER: ${{ matrix.toolchain.CXX }}
      CMAKE_CXX_FLAGS: ${{ matrix.toolchain.CFLAGS }}
      CMAKE_EXE_LINKER_FLAGS: ${{ matrix.toolchain.CFLAGS }}
      CMAKE_EXTRA_FLAGS: ${{ matrix.toolchain.CMAKE_FLAGS }}
      CMAKE_SHARED_LINKER_FLAGS: ${{ matrix.toolchain.CFLAGS }}
      CMAKE_C_COMPILER_LAUNCHER: ${{ matrix.toolchain.sccache }}
      CMAKE_CXX_COMPILER_LAUNCHER: ${{ matrix.toolchain.sccache }}
      SCCACHE_GHA_ENABLED: true

    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

      - name: Run sccache-action
        if: ${{ matrix.toolchain.sccache }}
        uses: mozilla-actions/sccache-action@7d986dd989559c6ecdb630a3fd2557667be217ad # v0.0.9

      - name: Configure
        run: |
          env | grep '^ASAN_OPTIONS\|^CMAKE' | sort
          cmake -DCMAKE_BUILD_TYPE="${CMAKE_BUILD_TYPE}" ${CMAKE_C_COMPILER+-DCMAKE_C_COMPILER="${CMAKE_C_COMPILER}"} ${CMAKE_CXX_COMPILER+-DCMAKE_CXX_COMPILER="${CMAKE_CXX_COMPILER}"} -DCMAKE_C_FLAGS="${CMAKE_C_FLAGS}" -DCMAKE_CXX_FLAGS="${CMAKE_CXX_FLAGS}" -DCMAKE_EXE_LINKER_FLAGS="${CMAKE_EXE_LINKER_FLAGS}" -DCMAKE_SHARED_LINKER_FLAGS="${CMAKE_SHARED_LINKER_FLAGS}" ${CMAKE_EXTRA_FLAGS} -S . -B ../build
        shell: bash

      - name: Build
        run: cmake --build ../build --config ${{matrix.toolchain.CMAKE_BUILD_TYPE}}

      - name: Test
        working-directory: ../build
        run: ctest --verbose --build-config ${{matrix.toolchain.CMAKE_BUILD_TYPE}}

      - name: CLI example help
        run: |
          ../build/examples/cli/monka --help || true

      - name: CLI example nerdstats/dumppackets
        run: |
          # todo add automatic exit to cli
          timeout --preserve-status 1 ../build/examples/cli/monka -nerdstats -dumppackets || true
